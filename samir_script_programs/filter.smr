func filter(list, rule){
    var output = List();
    var i = 0;
    while i < list.size do {
        var current = list.get(i);
        if rule(current) == true then
            output.add(current);
        i = i + 1;
    }
    return output;
}

func is_even_recursion(num){
    if num == 1 then
        return false;
    elif num == 0 then
        return true;
    else 
        return is_even(num - 2);
}

func is_even(num){
    return num % 2 == 0;
}

func isPrime(num){
    if num <= 1 then
        return false;
    var i = num - 1;
    while i >= 2 do {
        if num % i == 0 then
            return false;
        i = i - 1;
    }

    return true;
}

func is_multiple_5(num){
    return num % 5 == 0;
}

func fillList(from, to){
    var output = List();
    while from <= to do {
        output.add(from);
        from = from + 1;
    }

    return output;
}

var numbers = fillList(0, 30);

println filter(numbers, isPrime);
println filter(numbers, is_even);
println filter(numbers, is_multiple_5);

println filter(numbers, lambda x -> x % 3 == 0);
println filter(numbers, lambda x ->isPrime(x));

println filter(numbers, lambda x -> x == 5);
